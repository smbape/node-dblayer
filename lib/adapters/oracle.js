// Generated by CoffeeScript 1.9.2
var AbstractClient, OracleClient,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

AbstractClient = require('../AbstractClient');

OracleClient = (function(superClass) {
  extend(OracleClient, superClass);

  function OracleClient() {
    return OracleClient.__super__.constructor.apply(this, arguments);
  }

  OracleClient.prototype.begin = notImplemented;

  OracleClient.prototype.commit = notImplemented;

  OracleClient.prototype.rollback = notImplemented;

  OracleClient.prototype.query = notImplemented;

  OracleClient.prototype.end = notImplemented;

  return OracleClient;

})(AbstractClient);

module.exports = {
  createConnection: function(options, callback) {}
};
